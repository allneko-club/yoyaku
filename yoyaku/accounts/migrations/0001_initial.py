# Generated by Django 4.1 on 2022-08-22 02:46

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import yoyaku.core.exceptions.field_validatiors


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, unique=True, verbose_name='年代')),
                ('rank', models.PositiveIntegerField(unique=True, verbose_name='表示順')),
            ],
        ),
        migrations.CreateModel(
            name='Sex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, unique=True, verbose_name='性別')),
                ('rank', models.PositiveIntegerField(unique=True, verbose_name='表示順')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.CharField(error_messages={'unique': '入力されたユーザIDは利用できません。'}, help_text='（半角英数と-_が使用可能。 最大32文字）', max_length=32, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_character', message='ユーザIDは半角英数字と-_が使用できます。', regex='^[a-zA-Z0-9_-]+$')], verbose_name='ユーザID')),
                ('username', models.CharField(help_text='（最大32文字）', max_length=32, verbose_name='名前')),
                ('email', models.EmailField(error_messages={'unique': '入力されたメールアドレスは既に登録済みです。'}, max_length=254, null=True, unique=True, verbose_name='メールアドレス')),
                ('row_password', models.CharField(blank=True, max_length=128, null=True, verbose_name='row_password')),
                ('is_staff', models.BooleanField(default=False, verbose_name='スタッフの状態')),
                ('is_active', models.BooleanField(default=True, verbose_name='有効フラグ')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='作成日時')),
                ('furigana', models.CharField(blank=True, max_length=32, null=True, validators=[django.core.validators.RegexValidator(code='katakana_pattern', message='フリガナは全角カタカナで入力してください。', regex='^[ァ-ヿ]+$')], verbose_name='フリガナ')),
                ('phone_number', models.CharField(error_messages={'unique': '入力された電話番号は既に登録済みです。'}, max_length=11, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='phone_number_pattern', message='電話番号は半角数字でハイフンなしで入力してください。', regex='^[0-9]{10,11}$')], verbose_name='電話番号')),
                ('linename', models.CharField(blank=True, max_length=32, null=True, verbose_name='LINE名')),
                ('age', models.PositiveIntegerField(blank=True, null=True, verbose_name='年齢')),
                ('job', models.CharField(blank=True, max_length=32, null=True, validators=[yoyaku.core.exceptions.field_validatiors.validate_job], verbose_name='職業')),
                ('zip_code', models.CharField(blank=True, max_length=7, null=True, validators=[django.core.validators.RegexValidator(code='zip_code_pattern', message='郵便番号はハイフンなしの半角数字で入力してください。', regex='^[0-9]{7}$')], verbose_name='郵便番号')),
                ('zip', models.CharField(blank=True, max_length=200, null=True, verbose_name='住所')),
                ('workable_time', models.CharField(blank=True, max_length=250, null=True, verbose_name='作業可能時間')),
                ('side_business_experience', models.CharField(blank=True, max_length=16, null=True, verbose_name='副業経験')),
                ('contact', models.CharField(blank=True, max_length=1000, null=True, verbose_name='お問い合わせ内容')),
                ('memo1', models.CharField(blank=True, max_length=500, null=True, verbose_name='メモ1')),
                ('memo2', models.CharField(blank=True, max_length=2000, null=True, verbose_name='メモ2')),
                ('ages', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.ages')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
